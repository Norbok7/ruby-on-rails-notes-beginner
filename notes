how to start a file in ruby on rails virtual linux system

inside your ubuntu terminal:
rails new <project-name> for fullstack 

or inside your ubuntu terminal creates api without javascript or css files:
rails new my_first_rails_project --api

ls -- to view files in your virtual linux terminal
cd my_first_rails_project --goes to that folder after finding with ls to view
code .  ----to open it in ruby on rails virtual linux system

  #shortcut to open is code filename in terminal 

# To create a model, we can use the rails generate model command:

rails generate model User name:string email:string

this model file will be created in app/models/user.rb

# it also created a migration file at db/migrate
Migration files are Ruby classes that are used to make changes to the database. They are a way to update the database schema. For example, we can use migrations to create tables, add columns, and remove columns.
<!-- migrations occur in alphabetical order -->
Another note is do not delete or modify migration files.

# Since we generated the creation of the file using a Ruby on Rails command, it doesn't automatically create the table in the database. We need to run the migration file to create the table in the database. To run the migration file, we can use the rails db:migrate command:

rails db:migrate

<!-- that should show this == 20231230191708 CreateUsers: migrating ======================================
-- create_table(:users)
   -&gt; 0.0018s
== 20231230191708 CreateUsers: migrated (0.0019s) =============================
What if we made a mistake and like to modify our migration file? We can do that by running the rails db:rollback command: -->

rails db:rollback

This will rollback the last migration and reset the state of the migration file back to pending. It will remove the users table from the database since that was the last migration we ran. You should see something along the lines of this:

# Sometimes we may want to rollback multiple migrations. We can do that by specifying the number of migrations we want to rollback. For example, if we want to rollback the last two migrations, we can run the rails db:rollback STEP=2 command:

However, this won't work now since we only have one migration file.

rails db:rollback STEP=2

Schema
Now that we have created the users table in the database, let's take a look at the schema file. Navigate to the db folder and open the schema.rb file.

The schema essentially is a representation of the database. It will include all the tables and columns that are in the database. We never have to manually modify this file. It's automatically generated by Rails and it's used to determine the current state of the database. If at any point we want to modify the database, we can do that by creating a new migration file like we did before.

When you run db:migrate it will change the schema file. Let's take a look at the schema file that was generated for us. It should look something like this:

ActiveRecord::Schema.define(version: 20231230191708) do

  create_table "users", force: :cascade do |t|
    t.string "name"
    t.string "email"
    t.datetime "created_at", precision: 6, null: false
    t.datetime "updated_at", precision: 6, null: false
  end

end

<!-- model methods to interact with database -->
rails console --in terminal

exit

# create a user in rails
Let's go ahead and create a new user. We can do that by running the following command:

User.create(name: "John Doe", email: "johndoe@gmail.com")
This is the equivalent of running the following SQL query:

INSERT INTO users (name, email) VALUES ("John Doe", "joendoe@gmail.com"

<!-- find user like this  -->
User.find(1)
